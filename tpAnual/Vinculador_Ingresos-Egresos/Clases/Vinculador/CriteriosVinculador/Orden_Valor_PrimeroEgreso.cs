///////////////////////////////////////////////////////////
//  Orden-Valor-PrimeroEgreso.cs
//  Implementation of the Class Orden-Valor-PrimeroEgreso
//  Generated by Enterprise Architect
//  Created on:      12-Sep-2020 7:23:03 PM
//  Original author: Franco
///////////////////////////////////////////////////////////
using System;
using System.Linq;
using TPANUAL;

public class Orden_Valor_PrimeroEgreso : CriterioVinculador {

	public Orden_Valor_PrimeroEgreso(){

	}

	public override void vincular(DB_Context contexto, Organizacion organizacion){

		var listaIngresos = contexto.operacionDeIngreso
			.SqlQuery("Select * from operaciondeingreso where ID_Organizacion = {0} order by monto", organizacion.ID_Organizacion)
			.ToList();

		var listaEgresos = contexto.operacionDeEgreso
			.SqlQuery("Select * from operaciondeegreso where ID_Organizacion = {0} order by valortotal", organizacion.ID_Organizacion)
			.ToList();
/*
		for (int j = 0; j < listaEgresos.Count; j++)
		{
			Console.WriteLine(listaEgresos[j].ID_OperacionDeEgreso);
			Console.WriteLine(listaEgresos[j].ValorTotal);
		}

		Console.WriteLine("--------------------");

		for (int i = 0; i < listaIngresos.Count; i++)	
        {
			Console.WriteLine(listaIngresos[i].ID_Ingreso);
			Console.WriteLine(listaIngresos[i].Monto);
		}

		Console.ReadLine();
*/
		
		// Guarda la diferencia restante entre ingreso y egreso
		float montoIngresoRestante;

		for(int i = 0; i < listaIngresos.Count; i++)
		{
			// Le asigna el valor del ingreso al principio del foreach
			montoIngresoRestante = listaIngresos[i].Monto;
			Console.WriteLine(listaIngresos[i].ID_Ingreso);
			Console.WriteLine(listaIngresos[i].Monto);

			// Para cada egreso 
			for (int j = 0; j < listaEgresos.Count; j++)
			{
				// Chequeo si puedo asociar el egreso al ingreso
				if(montoIngresoRestante >= listaEgresos[j].ValorTotal)
				{	
					// Guardo lo que me falta para llenar el ingreso
					montoIngresoRestante -= listaEgresos[j].ValorTotal;

					// Si se puede, lo asocio
					asociarEgresoIngreso(contexto, listaEgresos[j], listaIngresos[i]);

					Console.WriteLine(listaEgresos[j].ID_OperacionDeEgreso);
					Console.WriteLine(listaEgresos[j].ValorTotal);
					
					
					
				}
			}
		}
		Console.ReadLine();
	}
}