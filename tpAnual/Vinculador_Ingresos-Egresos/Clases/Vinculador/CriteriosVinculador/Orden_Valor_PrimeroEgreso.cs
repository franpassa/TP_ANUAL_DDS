///////////////////////////////////////////////////////////
//  Orden-Valor-PrimeroEgreso.cs
//  Implementation of the Class Orden-Valor-PrimeroEgreso
//  Generated by Enterprise Architect
//  Created on:      12-Sep-2020 7:23:03 PM
//  Original author: Franco
///////////////////////////////////////////////////////////
using System;
using System.Collections.Generic;
using System.Linq;
using TPANUAL;

public class Orden_Valor_PrimeroEgreso : CriterioVinculador {

	public Orden_Valor_PrimeroEgreso(){

	}

	public override void vincular(DB_Context contexto){
		
		var listaEgresos = contexto.operacionDeEgreso
			.SqlQuery("SELECT * FROM OperacionDeEgreso ORDER BY ValorTotal ASC").ToList<OperacionDeEgreso>();

		var listaIngresos = contexto.operacionDeIngreso
			.SqlQuery("SELECT * FROM OperacionDeIngreso ORDER BY ValorTotal ASC").ToList<OperacionDeIngreso>();

		Console.WriteLine("Lista egresos [0]", listaEgresos.Count());

		Console.WriteLine("Lista ingresos [0]", listaIngresos.Count());

		/*
		// Guarda la diferencia restante entre ingreso y egreso
		float montoIngresoRestante;
		foreach (OperacionDeIngreso ingreso in listaIngresos)
		{
			// Le asigna el valor del ingreso al principio del foreach
			montoIngresoRestante = ingreso.Monto;

			// Para cada egreso 
			foreach (OperacionDeEgreso egreso in listaEgresos)
			{
				// Chequeo si puedo asociar el egreso al ingreso
				if ((ingreso.Monto >= egreso.valorTotal()) ||
				   // O si lo que me falta para asociarlo es mayor al valor del egreso 
				   (montoIngresoRestante >= egreso.valorTotal()))
				{
					// Si se puede, lo asocio
					base.asociarEgresoIngreso(egreso, ingreso);

					// Guardo lo que me falta para llenar el ingreso
					montoIngresoRestante -= egreso.valorTotal();

					// Saco el egreso que acabo de vicular, para no vincularlo de nuevo a nada
					listaEgresos.Remove(egreso);
				}
			}
		}*/

	}
}