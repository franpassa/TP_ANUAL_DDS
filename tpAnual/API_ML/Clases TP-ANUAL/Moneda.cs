///////////////////////////////////////////////////////////
//  Moneda.cs
//  Implementation of the Class Moneda
//  Generated by Enterprise Architect
//  Created on:      04-Sep-2020 11:29:29 PM
//  Original author: Ignacio Andre Keiniger
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Net;
using System.Linq;
using API_MercadoLibre;

namespace API_MercadoLibre {
	public class Moneda {

		public String id;
		public String descripcion;
		public String simbolo;

		public Moneda(String _id)
        {
			// Pido info de la moneda en la API
			WebRequest request_moneda = HttpWebRequest.Create("https://api.mercadolibre.com/currencies/" + _id);
			bool error = false;
			try
			{
				request_moneda.GetResponse();
			}
			catch (System.Net.WebException e)
			{
                Console.WriteLine("{0} Exception caught.", e);
				Console.WriteLine("Id de moneda " + _id + " erroneo.");
				error = true;
			}
			if (!error)
			{
				WebResponse response_moneda = request_moneda.GetResponse();
				StreamReader reader_moneda = new StreamReader(response_moneda.GetResponseStream());

				// Guardo el JSON leido en un objeto
				string objetoJSON_moneda = reader_moneda.ReadToEnd();
				ML_Currency ML_CurrencyObject = Newtonsoft.Json.JsonConvert.DeserializeObject<ML_Currency>(objetoJSON_moneda);

				id = ML_CurrencyObject.id;
				descripcion = ML_CurrencyObject.description;
				simbolo = ML_CurrencyObject.symbol;
			}
        }

		public Double cambioDivisa(Pais _otroPais, Double _cantidad){
			WebRequest webRequestCurrency = HttpWebRequest.Create("https://api.mercadolibre.com/currency_conversions/search?from=" + id + "&to=" + _otroPais.moneda.id);
			WebResponse responseCurrency = webRequestCurrency.GetResponse();
			StreamReader readerCurrency = new StreamReader(responseCurrency.GetResponseStream());

			string currency_JSON = readerCurrency.ReadToEnd();
			double exchange = Newtonsoft.Json.JsonConvert.DeserializeObject<ML_CurrencyConversion>(currency_JSON).inv_rate;

			return (double)exchange * _cantidad;
		}
	}
}